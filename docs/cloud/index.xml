<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud on Morggoth's wiki</title><link>https://morggoth.github.io/docs/cloud/</link><description>Recent content in Cloud on Morggoth's wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Sep 2021 14:31:57 +0300</lastBuildDate><atom:link href="https://morggoth.github.io/docs/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Reliability and business continuity</title><link>https://morggoth.github.io/docs/cloud/aws/reliability_and_business_continuity/</link><pubDate>Mon, 13 Sep 2021 14:31:57 +0300</pubDate><guid>https://morggoth.github.io/docs/cloud/aws/reliability_and_business_continuity/</guid><description>Scalability and elasticity # Scalability - the ability of a system to increase resources to accommodate increased demand. This can be done vartically or horizontally, and is not necessarily automated.
Elasticity - the ability if a system to increase and decrease resources allocated (usually horizontally) to match demand, and implies automation.
AWS autoscaling resources:
Auto Scaling groups spot fleet ECS DynamoDB Aurora Read Replicas Scaling strategies:
availability balanced cost Launch template:</description></item><item><title>Monitoring, logging and retention</title><link>https://morggoth.github.io/docs/cloud/aws/monitoring_logging_and_retention/</link><pubDate>Tue, 17 Aug 2021 00:43:09 +0300</pubDate><guid>https://morggoth.github.io/docs/cloud/aws/monitoring_logging_and_retention/</guid><description>Collecting logs # CloudWatch # region scope fault tolerant durable push, not pull Everything in CW logs is going to be stored in a log group
A log stream - entity, which records into particular log group
A log record - is a single record of some event
# log group operations aws logs create-log-group aws logs delete-log-group aws logs associate-kms-key # log stream operations aws logs create-log-stream aws logs delete-log-stream # log record operations aws logs put-log-events aws logs get-log-events aws logs get-log-record Intagration with another services # service type of logs CloudTrail itself logs API Gateway Access/Execution logs ECS Container logs Lambda Execution logs RDS DB logs Systems Manager Run EC2 App/OS logs CloudTrail # region scope audit log logs both success and failure works with different types of events: management data insights organizations support # trail operations aws cloudtrail create-trail aws cloudtrail delete-trail # logging operations aws cloudtrail start-logging aws cloudtrail stop-logging # validation operations aws cloudtrail validate-logs Analyzing logs # CloudWatch insights # use existing log group/stream (sql-like) query engine alarm integration # Create query aws logs put-query-definition aws logs delete-query-definition # execute query and get results aws logs start-query aws logs stop-query aws logs get-query CloudTrail insights # use existing events ML-driven no query engine aws cloudtrail put-insights-selectors aws cloudtrail get-insights-selectors ElasticSearch and Kibana # region scope analytics engine reporting engine CWL integration Exporting logs # CWL export # S3 export CLI tail subscription filter - automatically delivers logs from CW to tne another service: kinesis stream lambda function kinesis data firehose logical destination # create or delete export task aws logs create-export-task aws logs cancel-export-task # live tail of log stream aws logs tail # create new subscription filter aws logs put-subscription-filter --log-group-name --filter-name --filter-pattern --destination-arn --role-arn Kinesis data firehose # This is a sort of batch mechanism</description></item><item><title>As a Service schema</title><link>https://morggoth.github.io/docs/cloud/as-a-service/</link><pubDate>Tue, 22 Jun 2021 00:27:00 +0300</pubDate><guid>https://morggoth.github.io/docs/cloud/as-a-service/</guid><description>+----------------+ | IaaS | | VM | | VPC | +----------------+ | | V +----------------+ | PaaS | | Managed DB | +----------------+ | | V +----------------+ | SaaS | | GitLab | | Shared hosting | +----------------+</description></item><item><title>Serverless</title><link>https://morggoth.github.io/docs/cloud/serverless/</link><pubDate>Tue, 20 Apr 2021 23:00:59 +0300</pubDate><guid>https://morggoth.github.io/docs/cloud/serverless/</guid><description>Оригинальная статья
Что такое Serverless # Serverless - дополнительный слой абстракции, при использовании которого нельзя напрямую влиять на нижележащую инфраструктуру сервиса.
Основное отличие serverless-сервисов от традиционных - тарификация: плата начисляется не за время использования, а за:
объём (хранимых) данных утилизацию ресурсов (количество запросов и трафик) За счет этого можно более точно спрогнозировать стоимость эксплуатации такого приложения.
Serverless-приложение - такое приложение, которое использует только serverless-сервисы.
Архитектура Lambda-функции # источник события (triggering event) сама функция: runtime deployment package (логика и зависимости) layers extensions точка назначения функции (если она требуется): S3 bucket DynamoDB table SQS etc Локальная разработка # SAM</description></item></channel></rss>