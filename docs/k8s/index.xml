<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Morggoth's wiki</title><link>https://morggoth.github.io/docs/k8s/</link><description>Recent content in Kubernetes on Morggoth's wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Dec 2020 23:27:15 +0300</lastBuildDate><atom:link href="https://morggoth.github.io/docs/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Operator intro</title><link>https://morggoth.github.io/docs/k8s/k8s/</link><pubDate>Wed, 23 Dec 2020 23:27:15 +0300</pubDate><guid>https://morggoth.github.io/docs/k8s/k8s/</guid><description>Оператор # Доклад
сущность, управляющая другими сущностями в кластере содержит шаблоны поведения основные задачи: облегчение жизни операторов k8s уменьшение количества микроменеджмента (автоматизация типовых задач по обслуживанию кластера) Оператор обслуживает весь жизненный цикл (например масштабирование, шардирование и т.д.; в отличии от Helm, который только ставит пакеты)
При построении оператора исходить из того, что он будет управлять необходимой сущностью как одним ресурсом (в качестве примера, оператор для кластера CH, который воспринимает его как одну сущность)</description></item><item><title>Foundation of Kubernetes</title><link>https://morggoth.github.io/docs/k8s/foundation_of_kubernetes/</link><pubDate>Thu, 18 Jun 2020 01:33:53 +0300</pubDate><guid>https://morggoth.github.io/docs/k8s/foundation_of_kubernetes/</guid><description>https://github.com/amorozov87/kubernetes-traning
Kubernetes quick start # K8S - opensource система оркестрации контейнеров
Основная задача - распределять (по нодам) и менеджить контейнеры с приложениями
Предоставляет:
service discovery load balancing autoscaling (как приложения, так и самого кластера) HA декларативный механизм обновлений полезной нагрузки Контроллер - демон, следящий за состоянием некоторого объекта, например приложения, которое задеплоили
Conceptions # nodes - узлы кластера master - нода, на которой задеплоен control plane worker - нода с бизнес приложениями namespace - виртуальное кластерное пространство внутри одного кластера; нужен для логического разделения задеплоенных приложений pods - базовая сущность кластера, абстракция над одним или несколькими контейнерами controllers controller manager - основной контроллер кластера, входящий в control plane operator - кастомный контроллер; пишется самостоятельно labels volumes jobs - одноразово запущенный контейнер, который будет рестартоваться только если процесс завершился с ненулевым кодом выхода (обычный контейнер будет рестартоваться при любом завершении процесса) kubectl - утилита управления кластером Кластерная роль затрагивает весь кластер.</description></item></channel></rss>