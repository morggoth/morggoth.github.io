<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Courses notes on Morggoth's wiki</title><link>https://morggoth.github.io/docs/mooc/</link><description>Recent content in Courses notes on Morggoth's wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Jul 2020 01:20:35 +0300</lastBuildDate><atom:link href="https://morggoth.github.io/docs/mooc/index.xml" rel="self" type="application/rss+xml"/><item><title>DS210: DataStax Enterprise 6 Operations with Apache Cassandra™</title><link>https://morggoth.github.io/docs/mooc/datastax_academy/cassandra_operations/</link><pubDate>Mon, 06 Jul 2020 01:20:35 +0300</pubDate><guid>https://morggoth.github.io/docs/mooc/datastax_academy/cassandra_operations/</guid><description>Configuring clusters: YAML # cassandra.yaml - the main configuration file
Cassandra nodes read this file on start-up restart of the node if needed for the changes to take effect Located in the following directories: cassandra package installations: /etc/dse/cassandra cassandra tarball installations: ${install_root}/resources/cassandra/conf Minimal properties # cluster_name listen_address native_transport_address (ip address, which use by the clients to connect to the node) seeds Commonly user YAML settings # endpoint_snitch</description></item><item><title>DS201: DataStax Enterprise 6 Foundations of Apache Cassandra™</title><link>https://morggoth.github.io/docs/mooc/datastax_academy/casandra_foundations/</link><pubDate>Wed, 01 Jul 2020 22:32:41 +0300</pubDate><guid>https://morggoth.github.io/docs/mooc/datastax_academy/casandra_foundations/</guid><description># How to start bin/cassandra # for core version ./dse cassandra # for DSE version bin/nodetool status # provide with cluster health info CQL Fundamentals # -- CQL - very similar to SQL SELECT * FROM USERS; -- Keyspaces - very similar to schemas in RDBMS; it is top level namespace/container; replication parameters required; contains tables CREATE KEYSPACE some_keyspace WITH REPLICATION = { &amp;#39;class&amp;#39;: &amp;#39;SimpleStrategy&amp;#39;, &amp;#39;replication_factor&amp;#39;: 1 }; -- USE switches between keyspaces USE other_keyspace; -- Tables contain data CREATE TABLE table1 ( column1 TEXT, column2 TEXT, column3 INT, PRIMARY KEY (column1) ); -- INSERT syntax similar to SQL syntax INSERT INTO users (user_id, first_name, last_name) VALUES (uuid(), &amp;#39;John&amp;#39;, &amp;#39;Doe&amp;#39;) -- SELECT also similar to SQL syntax SELECT * FROM users; SELECT first_name, last_name FROM users; SELECT * FROM users WHERE user_id = some_uuid_value; -- COPY - uses to import/export data between tables and CSV files COPY table1 (column1, column2, column3) FROM &amp;#39;table1data.</description></item><item><title>Foundation of Kubernetes</title><link>https://morggoth.github.io/docs/mooc/foundation_of_kubernetes/</link><pubDate>Thu, 18 Jun 2020 01:33:53 +0300</pubDate><guid>https://morggoth.github.io/docs/mooc/foundation_of_kubernetes/</guid><description>https://github.com/amorozov87/kubernetes-traning
Kubernetes quick start # K8S - opensource система оркестрации контейнеров
Основная задача - распределять (по нодам) и менеджить контейнеры с приложениями
Предоставляет:
service discovery load balancing autoscaling (как приложения, так и самого кластера) HA декларативный механизм обновлений полезной нагрузки Контроллер - демон, следящий за состоянием некоторого объекта, например приложения, которое задеплоили
Conceptions # nodes - узлы кластера master - нода, на которой задеплоен control plane worker - нода с бизнес приложениями namespace - виртуальное кластерное пространство внутри одного кластера; нужен для логического разделения задеплоенных приложений pods - базовая сущность кластера, абстракция над одним или несколькими контейнерами controllers controller manager - основной контроллер кластера, входящий в control plane operator - кастомный контроллер; пишется самостоятельно labels volumes jobs - одноразово запущенный контейнер, который будет рестартоваться только если процесс завершился с ненулевым кодом выхода (обычный контейнер будет рестартоваться при любом завершении процесса) kubectl - утилита управления кластером Кластерная роль затрагивает весь кластер.</description></item><item><title>Машинное обучение</title><link>https://morggoth.github.io/docs/mooc/ml/</link><pubDate>Thu, 12 Dec 2019 00:45:53 +0300</pubDate><guid>https://morggoth.github.io/docs/mooc/ml/</guid><description>Машинное обучение # Введение в машинное обучение и основные понятия статистики # Представление данных # Данные представляются в виде таблицы, в которой:
строки - объекты столбцы - признаки Ограничение табличного представления данных - все объекты должны иметь одинаковое количество признаков.
Типы признаков # Количественный (числовой) - область значения - вещественные числа, сам имеет числовую природу Порядковый - задаёт порядок, последовательность объектов Номинальный (категориальный) - не имеет числовой природы, как правило, число возможных значений конечно.</description></item></channel></rss>