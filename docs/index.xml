<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Morggoth's wiki</title><link>https://morggoth.github.io/docs/</link><description>Recent content in Docs on Morggoth's wiki</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Jun 2021 00:27:00 +0300</lastBuildDate><atom:link href="https://morggoth.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Prometheus</title><link>https://morggoth.github.io/docs/misc/prometheus/</link><pubDate>Wed, 31 Mar 2021 00:02:58 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/prometheus/</guid><description>Основные понятия мониторинга # Система мониторинга - набор инструментов, позволяющий снимать метрики со всех узлов инфраструктуры и сохранять их в единой базе для последующего анализа.
Метрика - любой показатель, который тем или иным образом харектеризует систему, например показатель LA, количество использованнйо памяти и п.т.
Узел инфраструктуры - любой используемый компонент, будь то сервер, ВМ или сетевое устройство.
Push model - агент отправляет метрики на центральный сервер системы мониторинга.
Pull model - центральный сервер самостоятельно опрашивает агентов.</description></item><item><title>Основы Docker</title><link>https://morggoth.github.io/docs/misc/docker/</link><pubDate>Wed, 31 Mar 2021 00:02:58 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/docker/</guid><description>Виртуализация # Типы виртуализации:
эмуляция железа - использует ВИ для симуляции требуемого железа pros: теоретически можно запустить любой софт на любом виртуальном железе cons: очень медленно +----------+----------+----------+----------+ | Apps | Apps | Apps | Apps | +----------+----------+----------+----------+ | Guest OS | Guest OS | Guest OS | Guest OS | +----------+----------+----------+----------+ | Hardware VM A | Hardware VM B | +---------------------+---------------------+ | Hardware | +---------------------+---------------------+ полная виртуализация</description></item><item><title>Cheatsheets</title><link>https://morggoth.github.io/docs/misc/cheatsheets/</link><pubDate>Thu, 11 Feb 2021 23:57:43 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/cheatsheets/</guid><description>SQL SELinux commands Tools Network Linux permissions x64 CPU AWS</description></item><item><title>Raspberry Pi</title><link>https://morggoth.github.io/docs/misc/rpi/</link><pubDate>Fri, 25 Dec 2020 21:39:00 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/rpi/</guid><description>Install CentOS 7 # # Download an image wget -O centos7-aarch64.raw.xz http://mirrors.powernet.com.ru/centos-altarch/7/isos/aarch64/images/CentOS-Userland-7-aarch64-RaspberryPI-Minimal-4-2009-sda.raw.xz # List available devices diskutil list # Unmount sdcard diskutil unmountDisk /dev/diskN # Flash the image and flush write cache xzcat centos7-aarch64.raw.xz| sudo dd bs=1m of=/dev/rdiskN; sync # Eject sdcard sudo diskutil eject /dev/rdiskN # Resize root partition rootfs-expand Install k8s via kubeadm # If you are faced into:
[ERROR SystemVerification]: missing required cgroups: memory you have to enable memory cgroups by adding cgroup_enable=memory to the /boot/cmdline.</description></item><item><title>Kafka basics</title><link>https://morggoth.github.io/docs/misc/kafka/</link><pubDate>Tue, 03 Nov 2020 22:38:47 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/kafka/</guid><description>Kafka cluster # broker отвечает за хранение данных (в бинарном виде) не знаком со внутренней структурой хранимых данных топик - сущность для логического разделения хранимых данных: на уровне топика можно задать ограничения на: объём и/или возраст хранимых данных (retention.bytes, retention.ms) количество реплик данных (replication factor) максимальный размер одного сообщения (max.message.bytes) минимальное число согласованных реплик, при котором можно будет записать данные (min.insync.replicas) и многое другое разбивается на партиции - сущность, непосредственно содержащая сообщения распределяются по брокерам равномерно (насколько это возможно), что позволяет масштабировать нагрузку на RW в один топик на диске хранится в виде файлов-сегментов с дефолтным размером в 1GB (log.</description></item><item><title>Old hardware</title><link>https://morggoth.github.io/docs/misc/old_hardware/</link><pubDate>Mon, 17 Feb 2020 10:47:42 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/old_hardware/</guid><description>Old hardware notes # Compaq Evo n600c # Solaris 9 notes # How to add on-board network interface in the system:
echo &amp;#39;iprb &amp;#34;pci8086,1038&amp;#34;&amp;#39; &amp;gt;&amp;gt; /etc/driver_aliases ifconfig iprb0 plumb # OR &amp;#34;touch /reconfigure; init 6&amp;#34;, but bit I didn&amp;#39;t check this method echo `hostname` &amp;gt; /etc/hostname.iprb0 sync reboot Source
And configure this interface to using dhcp:
Edit /etc/default/dhcpagent by root user ( previously need to add write permissions to this file ).</description></item><item><title>ChromeOS</title><link>https://morggoth.github.io/docs/misc/chromeos/</link><pubDate>Thu, 12 Dec 2019 00:45:53 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/chromeos/</guid><description>Chrome OS # Crew # Crew is a Crome OS package manager.
Problem like this:
chronos@localhost ~/Downloads $ crew install neovim neovim: Neovim is a refactor, and sometimes redactor, in the tradition of Vim (which itself derives from Stevie). https://neovim.io/ version 0.2.0 Precompiled binary available, downloading... curl: error while loading shared libraries: libmetalink.so.3: cannot open shared object file: No such file or directory Traceback (most recent call last): 9: from /usr/local/bin/crew:974:in `&amp;lt;main&amp;gt;&amp;#39; 8: from /usr/local/bin/crew:905:in `install_command&amp;#39; 7: from /usr/local/bin/crew:905:in `each&amp;#39; 6: from /usr/local/bin/crew:909:in `block in install_command&amp;#39; 5: from /usr/local/bin/crew:611:in `resolve_dependencies_and_install&amp;#39; 4: from /usr/local/bin/crew:697:in `install&amp;#39; 3: from /usr/local/bin/crew:430:in `download&amp;#39; 2: from /usr/local/bin/crew:430:in `chdir&amp;#39; 1: from /usr/local/bin/crew:437:in `block in download&amp;#39; /usr/local/bin/crew:437:in `read&amp;#39;: No such file or directory @ rb_sysopen - .</description></item><item><title>macOS</title><link>https://morggoth.github.io/docs/misc/macos/</link><pubDate>Thu, 12 Dec 2019 00:45:53 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/macos/</guid><description>Terminal utils # Mount (linux distro) ISO # First we attach ISO to system:
hdiutil attach -nomount /path/to/ISO returns something like this:
/dev/disk2 Apple_partition_scheme /dev/disk2s1 Apple_partition_map /dev/disk2s2 Apple_HFS then mount need device to mountpoint:
mount -t cd9660 /dev/disk2 /path/to/mount And after usage:
umount /dev/disk2 hdiutil detach disk2 Show CPU info # # Number of CPU cores sysctl -n hw.ncpu # CPU model sysctl -n machdep.cpu.brand_string Flush DNS cache # # Big Sur sudo dscacheutil -flushcache sudo killall -HUP mDNSResponder</description></item><item><title>Mikrotik</title><link>https://morggoth.github.io/docs/misc/mikrotik/</link><pubDate>Thu, 12 Dec 2019 00:45:53 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/mikrotik/</guid><description>NetInstall # Netinstall tool originaly delevoped for Windows. I don`t test it via wine.
Disable Firewall Connect PC to Port 1 on Mikrotik Disable all other network interfaces on the PC - LAN, Wireless, Virtualbox Set static IP of 192.168.88.3 subnet mask 255.255.255.0 gateway 192.168.88.1 on PC Run NetInstall (download page) Select &amp;ldquo;Net Booting&amp;rdquo; Mark &amp;ldquo;Boot Serve Enabled&amp;rdquo; Selected Client IP address of 192.168.88.1 Keep reset pressed while powering on Keep holding the reset pin till a beep sounds.</description></item><item><title>Tips &amp; Tricks</title><link>https://morggoth.github.io/docs/misc/tips_and_tricks/</link><pubDate>Thu, 12 Dec 2019 00:45:53 +0300</pubDate><guid>https://morggoth.github.io/docs/misc/tips_and_tricks/</guid><description>Common # Generate password # $ openssl rand -base64 14 $ gpg --gen-random --armor 1 14 $ cat /dev/urandom | tr -dc a-zA-Z0-9 | fold -w 14 | head -n 1 Generate missed pub key from private # $ ssh-keygen -y -f ~/.ssh/id_rsa &amp;gt; ~/.ssh/id_rsa.pub Create a large file # Linux &amp;amp; all filesystems xfs_mkfile 10240m 10Gigfile Linux &amp;amp; and some filesystems (ext4, xfs, btrfs and ocfs2) fallocate -l 10G 10Gigfile OS X, Solaris, SunOS and probably other UNIXes mkfile 10240m 10Gigfile Source</description></item></channel></rss>